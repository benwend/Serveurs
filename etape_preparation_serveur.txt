*********************************************************
*														*
*		5 premières minutes sur un serveur Debian		*
*														*
*********************************************************
* Source : 												*
*	http://blog.nicolargo.com/2013/03/mes-5-premieres-minutes-sur-un-serveur-debian.html
* 	http://fr.openclassrooms.com/informatique/cours/securiser-son-serveur-linux
*	http://blog.nicolargo.com/2013/06/ma-methode-pour-gerer-les-regles-iptables.html
*	http://www.isalo.org/wiki.debian-fr/Configuration_d%27un_serveur_mail_avec_Postfix
*														*
*********************************************************

1) CRÉATION DE COMPTE
	- Ne pas utiliser le compte root
	- Créer un compte qui se connectera avec sudo
	- Ajouter ce compte dans sudo

	http://doc.ubuntu-fr.org/sudoers
	Installer le package sudo : # apt-get install sudo
	Choix de l'éditeur favoris :# update-alternatives --config editor
	Modification du sudoer :	# visudo


2) CONNEXION À DISTANCE VIA SSH
	- Créer une paire de clés SSH pour pouvoir se connecter à son serveur
	- Pousser la clé publique sur le serveur distant :
		$ ssh-copy-id user@monserveur
	- Éditer etc/ssh/sshd_config :
		_ Changer de port SSH pour diminuer les attaques -> Port : ?
		_ Désactiver la connexion pour root -> PermitRootLogin no
		_ Désactiver l'authentification par mot de passe -> PasswordAuthentication no
	- Relancer le service SSH :
		$ sudo service ssh restart


3) GESTION DU TEMPS
	- Gestion de l'horloge via le protocol NTP. Les OS récents embarquent un mécanisme pour configurer automatiquement leur horloge. Donc à faire si vous avez des problèmes d'horloge ou si votre machine est isolé ou filtrée lors de leur accès internet :
		$ sudo apt-get install ntp ntpdate
	- Puis si vous avez un accès internet :
		$ sudo ntpdate-debian
	- Si vous n'avez pas d'accès internet, appelé l'horloge parlante et configurer via la commande :
		$ sudo date -s hh:mm:ss


4) SERVEUR DE MESSAGERIE (Part I : Installation de sSMTP)
	http://wiki.ouieuhtoutca.org/doku.php?id=ssmtp
	

4) SERVEUR DE MESSAGERIE (Part I : Installation de base avec Postfix)
	http://www.isalo.org/wiki.debian-fr/Configuration_dun_serveur_mail_avec_Postfix
	- Nous utiliserons postfix :
		$ sudo apt-get install postfix
	- Puis pour la configuration, nous exécuterons le script :
		$ sudo dpkg-reconfigure postfix

4) SERVEUR DE MESSAGERIE (Part I : Installation de base avec exim4)
	https://support.ikoula.com/index-1-2-122-2070-exim-mail-smtp-linux.html
	- Nous utiliserons exim4 (installé par défaut sur Debian) :
		$ sudo apt-get install exim4
	- Puis pour la configuration, nous exécuterons le script :
		$ sudo dpkg-reconfigure exim4-config

			
5) CONTRÔLER LES ENTRÉES AVEC FAIL2BAN
	- Installer Fail2ban :
		$ sudo apt-get install fail2ban
	- Copier le fichier jail.local (évitera à votre fichier d'être modifier à chaque mise à jour) :
		$ sudo wget --no-check-certificate -O /etc/fail2ban/jail.local https://raw.github.com/benwend/serveurs/master/Sécurité/fail2ban/jail.local
	- Copier les filtres apache-w00tw00t.conf et http-get-dos.conf si vous avez un serveur web.
	- Relancer le service Fail2ban :
		$ sudo service fail2ban restart
	- Vérifier si les prisons ont été correctement lancées :
		$ sudo fail2ban-client status


6) FERMER LES FENÊTRES DU FIREWALL
	- Télécharger le script firewall.sh pour gérer son pare-feu comme un service et initialiser les règles :
		$ sudo wget --no-check-certificate -O /etc/init.d/firewall https://raw.githubusercontent.com/benwend/serveurs/master/Sécurité/Iptables/firewall.sh
	- Ajouter les droits pour être exécutable :
		$ sudo chmod a+x /etc/init.d/firewall
	- Ajouter le script dans l'init pour être activé au démarrage :
		$ sudo update-rc.d firewall defaults 20
	- Vérifier les règles du pare-feu et leur bonne exécution :
		$ iptables -n -L -v --line-numbers


7) PRENDRE SOIN DE SES FONDATIONS EN TENANT SON SYSTÈME À JOUR
	http://wiki.ouieuhtoutca.org/doku.php?id=cron-apt
	- Installer le logiciel cron-apt pour qu'il nous informe des nouvelles mises à jours :
		$ sudo apt-get install cron-apt
	- Éditer le fichier /etc/cron-apt/config
		Voir dans https://github.com/benwend/serveurs/tree/master/etc/cron-apt
	- Surveiller que les services utilisent bien les dernières versions des lib :
		$ sudo apt-get install debian-goodies
	- Puis exécuter la commande suivante :
		$ sudo checkrestart -v


8) SURVEILLER LE TOUT AVEC LOGWATCH
	- Le logiciel LogWatch synthétise les logs et envoye des rapports par email :
		$ sudo apt-get install logwatch
	- Exécuter le logiciel avec votre adresse email
		$ sudo /usr/sbin/logwatch --output mail --mailto your@address.mail --detail high
	- Vérifier qu'il s'est bien ajouté dans le cron :
		$ ls -l /etc/cron.daily/ | grep logwatch
	- Modifier /usr/share/logwatch/default.conf/logwatch.conf :
		Ajouter votre email dans Mailto= root votre_email


9) SE PRÉMUNIR CONTRE LES INTRUSIONS
	- Bloquer en temps réel la plupart des scans de port connus grâce au logiciel Porsentry :
		$ sudo apt-get install portsentry
	- Éditer le fichier /etc/portsentry/portsentry.conf :
		Commentez les lignes KILL_HOSTS_DENY.
		Décommentez la ligne KILL_ROUTE="/sbin/iptables -I INPUT -s $TARGET$ -j DROP"
			-> Ainsi, Portsentry ajoutera une règle dans le firewall (iptables) pour rejeter les paquets en cas de scans.
	- Exécuter Porsentry par 2 fois pour les protocoles TCP et UDP :
		$ sudo portsentry -audp
		$ sudo portsentry -atcp
	-----
	- Bloquer les rootkits et backdoors via le logiciel Rkhunter, mais attention risque de faux positifs. Si vous n'êtes pas sûr de vous, ne l'installer pas :
		$ sudo apt-get install rkhunter
	- Éditer le fichier /etc/default/rkhunter :
		REPORT_EMAIL="your@address.mail"
		CRON_DAILY_RUN="yes"
	- Éditer le fichier /etc/rkhunter.conf :
		MAIL-ON-WARNING="your@address.mail"
	- Vérifier son bon fonctionnement :
		$ ls -l /etc/cron.daily/ | grep rkhunter
	- Mettre à jour la base de données :
		$ sudo rkhunter --propupd
	- Lancer une vérification manuelle :
		$ sudo rkhunter --checkall


10) TRUCS & ASTUCES
	- Apache2 :
		_ Éditer le fichier /etc/apache2/apache2.conf :
			ServerSignature=off
			ServerTokens=prod
		_ Ajouter règles dans Fail2ban et Iptables
	- MySQL :
		_ Exécuter le script mysql_secure_installation qui vous aiderez à sécuriser un minimum MySQL :
			$ sudo /usr/bin/mysql_secure_installation
	- FTP :
		_ Ne surtout pas créer de FTP anonymes !
		_ Ajouter règles dans Fail2ban et Iptables


11) TESTER LA SÉCURITÉ DU SERVEUR
	- Voir les ports ouverts via la commande Netstat :
		$ sudo netstat -lapute
	- Scan de ports via l'excellent Nmap :
		$ sudo nmap -v -A IP_Serveur
	- Scan de vulnérabilité, pour tester les principales failles des services ouvert via OpenVAS :
		$ ...

12) SERVEUR DE MESSAGERIE (Part II)
	- Reception des emails et connexions sécurisées via SSL/TLS:
		...
	- Installation de ClamAV :
		$ sudo apt-get install clamav
	- Anti-Spam via SpamAssassin :
		...
		
13) SERVEUR (S)FTP(S)
	- Avec VSFTPD :
		- http://blog.moncoindunet.fr/linux/installer-et-configurer-vsftpd/
	- Avec SSH :
		- http://www.pointroot.org/index.php/2011/09/03/sftp-server-ftp-over-ssh-port-command/
